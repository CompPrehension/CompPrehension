//-------------------STATIC (CLASS) SECTION-------------------
//------------------------------------------------------------

class `operator_&&` : StrictOrderOperator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 14 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;

	isAnd = true;
	firstOperandPlacement = OperandPlacement:left;
	requiredFirstOperandValueToEvaluate<OperandPlacement:right> = ExpectedValue:`true` ;
} [
	text = "&&" ;
	RU.localizedName = "оператор &&" ;
	EN.localizedName = "operator &&" ;
]

class `operator_,` : StrictOrderOperator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 17 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;

	isComma = true;
	firstOperandPlacement = OperandPlacement:left;
} [
	text = "," ;
	RU.localizedName = "оператор ," ;
	EN.localizedName = "operator ," ;
]

class `operator_?` : StrictOrderOperator {

	arity = arity:ternary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = true ;
	countOfTokens = 2 ;

	isTConditional = true;
	firstOperandPlacement = OperandPlacement:left;
	requiredFirstOperandValueToEvaluate<OperandPlacement:right> = ExpectedValue:`false` ;
	requiredFirstOperandValueToEvaluate<OperandPlacement:center> = ExpectedValue:`true` ;
} [
	text = "?" ;
	token2text = ":";
	RU.localizedName = "оператор ? :" ;
	EN.localizedName = "operator ? :" ;
]

class `operator_||` : StrictOrderOperator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 15 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;

	isOr = true;
	firstOperandPlacement = OperandPlacement:left;
	requiredFirstOperandValueToEvaluate<OperandPlacement:right> = ExpectedValue:`false` ;
} [
	text = "||" ;
	RU.localizedName = "оператор ||" ;
	EN.localizedName = "operator ||" ;
]

class `operator_!` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;

	isNot = true;
} [
	text = "!" ;
	RU.localizedName = "оператор !" ;
	EN.localizedName = "operator !" ;
]

class `operator_!=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 10 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "!=" ;
	RU.localizedName = "оператор !=" ;
	EN.localizedName = "operator !=" ;
]

class `operator_%` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 5 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "%" ;
	RU.localizedName = "оператор %" ;
	EN.localizedName = "operator %" ;
]

class `operator_%=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "%=" ;
	RU.localizedName = "оператор %=" ;
	EN.localizedName = "operator %=" ;
]

class `operator_&` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "&" ;
	RU.localizedName = "оператор &" ;
	EN.localizedName = "operator &" ;
]

class `operator_&=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "&=" ;
	RU.localizedName = "оператор &=" ;
	EN.localizedName = "operator &=" ;
]

class `operator_*=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "*=" ;
	RU.localizedName = "оператор *=" ;
	EN.localizedName = "operator *=" ;
]

class `operator_+=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "+=" ;
	RU.localizedName = "оператор +=" ;
	EN.localizedName = "operator +=" ;
]

class `operator_-=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "-=" ;
	RU.localizedName = "оператор -=" ;
	EN.localizedName = "operator -=" ;
]

class `operator_->` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "->" ;
	RU.localizedName = "оператор ->" ;
	EN.localizedName = "operator ->" ;
]

class `operator_.` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "." ;
	RU.localizedName = "оператор ." ;
	EN.localizedName = "operator ." ;
]

class `operator_/` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 5 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "/" ;
	RU.localizedName = "оператор /" ;
	EN.localizedName = "operator /" ;
]

class `operator_/=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "/=" ;
	RU.localizedName = "оператор /=" ;
	EN.localizedName = "operator /=" ;
]

class `operator_::` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 1 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "::" ;
	RU.localizedName = "оператор ::" ;
	EN.localizedName = "operator ::" ;
]

class `operator_<` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 9 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<" ;
	RU.localizedName = "оператор <" ;
	EN.localizedName = "operator <" ;
]

class `operator_<<` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 7 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<<" ;
	RU.localizedName = "оператор <<" ;
	EN.localizedName = "operator <<" ;
]

class `operator_<<=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<<=" ;
	RU.localizedName = "оператор <<=" ;
	EN.localizedName = "operator <<=" ;
]

class `operator_<=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 9 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<=" ;
	RU.localizedName = "оператор <=" ;
	EN.localizedName = "operator <=" ;
]

class `operator_<=>` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 8 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<=>" ;
	RU.localizedName = "оператор <=>" ;
	EN.localizedName = "operator <=>" ;
]

class `operator_=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "=" ;
	RU.localizedName = "оператор =" ;
	EN.localizedName = "operator =" ;
]

class `operator_==` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 10 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "==" ;
	RU.localizedName = "оператор ==" ;
	EN.localizedName = "operator ==" ;
]

class `operator_>` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 9 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">" ;
	RU.localizedName = "оператор >" ;
	EN.localizedName = "operator >" ;
]

class `operator_>=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 9 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">=" ;
	RU.localizedName = "оператор >=" ;
	EN.localizedName = "operator >=" ;
]

class `operator_>>` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 7 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">>" ;
	RU.localizedName = "оператор >>" ;
	EN.localizedName = "operator >>" ;
]

class `operator_>>=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">>=" ;
	RU.localizedName = "оператор >>=" ;
	EN.localizedName = "operator >>=" ;
]

class `operator_^` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "^" ;
	RU.localizedName = "оператор ^" ;
	EN.localizedName = "operator ^" ;
]

class `operator_^=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "^=" ;
	RU.localizedName = "оператор ^=" ;
	EN.localizedName = "operator ^=" ;
]

class `operator_binary_&` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 11 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "&" ;
	RU.localizedName = "оператор &" ;
	EN.localizedName = "operator &" ;
]

class `operator_binary_*` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 5 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "*" ;
	RU.localizedName = "оператор *" ;
	EN.localizedName = "operator *" ;
]

class `operator_binary_+` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 6 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "+" ;
	RU.localizedName = "оператор +" ;
	EN.localizedName = "operator +" ;
]

class `operator_binary_-` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 6 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "-" ;
	RU.localizedName = "оператор -" ;
	EN.localizedName = "operator -" ;
]

class operator_co_await : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "co_await" ;
	RU.localizedName = "оператор co_await" ;
	EN.localizedName = "operator co_await" ;
]

class operator_co_yield : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "co_yield" ;
	RU.localizedName = "оператор co_yield" ;
	EN.localizedName = "operator co_yield" ;
]

class operator_delete : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "delete" ;
	RU.localizedName = "оператор delete" ;
	EN.localizedName = "operator delete" ;
]

class operator_new : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = false ;
	needsOperand<OperandPlacement:center> = true ;
	countOfTokens = 1 ;
} [
	text = "new" ;
	RU.localizedName = "оператор new" ;
	EN.localizedName = "operator new" ;
]

class operator_cast : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 2 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "cast" ;
	RU.localizedName = "оператор приведения типов" ;
	EN.localizedName = "operator cast" ;
]

class `operator_postfix_++` : operator {

	arity = arity:unary ;
	place = place:postfix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = false ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "++" ;
	RU.localizedName = "оператор ▯++" ;
	EN.localizedName = "operator ▯++" ;
]

class `operator_postfix_--` : operator {

	arity = arity:unary ;
	place = place:postfix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = false ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "--" ;
	RU.localizedName = "оператор ▯--" ;
	EN.localizedName = "operator ▯--" ;
]

class `operator_prefix_++` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "++" ;
	RU.localizedName = "оператор ++▯" ;
	EN.localizedName = "operator ++▯" ;
]

class `operator_prefix_--` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "--" ;
	RU.localizedName = "оператор --▯" ;
	EN.localizedName = "operator --▯" ;
]

class operator_sizeof : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "sizeof" ;
	RU.localizedName = "оператор sizeof" ;
	EN.localizedName = "operator sizeof" ;
]

class operator_subscript : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = false ;
	needsOperand<OperandPlacement:center> = true ;
	countOfTokens = 2 ;
} [
	text = "[" ;
	token2text = "]";
	RU.localizedName = "оператор [ ]" ;
	EN.localizedName = "operator [ ]" ;
	isComplex = true ;
]

class operator_function_call : operator {
 	arity = arity:binary ;
 	place = place:infix ;
 	precedence = 2 ;
 	associativity = associativity:left ;
 	needsOperand<OperandPlacement:left> = false ;
 	needsOperand<OperandPlacement:right> = false ;
 	needsOperand<OperandPlacement:center> = true ;
 	countOfTokens = 2 ;
    canHaveManyCentralOperands = true ;
 } [
 	text = "(" ;
 	token2text = ")";
 	RU.localizedName = "оператор вызова функции" ;
 	EN.localizedName = "function call operator" ;
 	isComplex = true ;
 ]

class operator_method_call : operator {
    arity = arity:binary ;
    place = place:infix ;
    precedence = 2 ;
    associativity = associativity:left ;
    needsOperand<OperandPlacement:left> = true ;
    needsOperand<OperandPlacement:right> = false ;
    needsOperand<OperandPlacement:center> = true ;
    countOfTokens = 2 ;
    canHaveManyCentralOperands = true ;
} [
    text = "(" ;
    token2text = ")";
    RU.localizedName = "оператор вызова метода" ;
    EN.localizedName = "method call operator" ;
    isComplex = true ;
]

class operator_throw : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "throw" ;
	RU.localizedName = "оператор throw" ;
	EN.localizedName = "operator throw" ;
]

class `operator_unary_*` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "*" ;
	RU.localizedName = "оператор *" ;
	EN.localizedName = "operator *" ;
]

class `operator_unary_+` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "+" ;
	RU.localizedName = "оператор +" ;
	EN.localizedName = "operator +" ;
]

class `operator_unary_-` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "-" ;
	RU.localizedName = "оператор -" ;
	EN.localizedName = "operator -" ;
]

class `operator_|` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 13 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "|" ;
	RU.localizedName = "оператор |" ;
	EN.localizedName = "operator |" ;
]

class `operator_|=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "|=" ;
	RU.localizedName = "оператор |=" ;
	EN.localizedName = "operator |=" ;
]

class `operator_~` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "~" ;
	RU.localizedName = "оператор ~" ;
	EN.localizedName = "operator ~" ;
]

obj currentLanguage : language {
    isStrictOrderCentralOperands = false ;
} [
    RU.localizedName = "язык С++" ;
    EN.localizedName = "С++ language" ;
]