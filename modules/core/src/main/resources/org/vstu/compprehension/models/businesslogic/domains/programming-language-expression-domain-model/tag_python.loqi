//-------------------STATIC (CLASS) SECTION-------------------
//------------------------------------------------------------

class operator_and : StrictOrderOperator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 14 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
	isAnd = true ;
	firstOperandPlacement = OperandPlacement:left ;
	requiredFirstOperandValueToEvaluate<OperandPlacement:right> = ExpectedValue:`true` ;
} [
	text = "and" ;
	RU.localizedName = "оператор and" ;
	EN.localizedName = "operator and" ;
	TEMPLATING_ID = 37 ;
]

class operator_if : StrictOrderOperator {

	arity = arity:ternary ;
	place = place:infix ;
	precedence = 16 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = true ;
	countOfTokens = 2 ;
	isTConditional = true ;
	firstOperandPlacement = OperandPlacement:center ;
	requiredFirstOperandValueToEvaluate<OperandPlacement:left> = ExpectedValue:`true` ;
	requiredFirstOperandValueToEvaluate<OperandPlacement:right> = ExpectedValue:`false` ;
} [
	text = "if" ;
	token2text = "else" ;
	RU.localizedName = "оператор if else" ;
	EN.localizedName = "operator if else" ;
	TEMPLATING_ID = 39 ;
]

class operator_or : StrictOrderOperator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 15 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
	isOr = true ;
	firstOperandPlacement = OperandPlacement:left ;
	requiredFirstOperandValueToEvaluate<OperandPlacement:right> = ExpectedValue:`false` ;
} [
	text = "or" ;
	RU.localizedName = "оператор or" ;
	EN.localizedName = "operator or" ;
	TEMPLATING_ID = 45 ;
]

class `operator_!=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "!=" ;
	RU.localizedName = "оператор !=" ;
	EN.localizedName = "operator !=" ;
	TEMPLATING_ID = 1 ;
]

class `operator_%` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 6 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "%" ;
	RU.localizedName = "оператор %" ;
	EN.localizedName = "operator %" ;
	TEMPLATING_ID = 2 ;
]

class `operator_%=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "%=" ;
	RU.localizedName = "оператор %=" ;
	EN.localizedName = "operator %=" ;
	TEMPLATING_ID = 21 ;
]

class `operator_&` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 9 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "&" ;
	RU.localizedName = "оператор &" ;
	EN.localizedName = "operator &" ;
	TEMPLATING_ID = 3 ;
]

class `operator_&=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "&=" ;
	RU.localizedName = "оператор &=" ;
	EN.localizedName = "operator &=" ;
	TEMPLATING_ID = 24 ;
]

class `operator_*` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 6 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "*" ;
	RU.localizedName = "оператор *" ;
	EN.localizedName = "operator *" ;
	TEMPLATING_ID = 4 ;
]

class `operator_**` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 4 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "**" ;
	RU.localizedName = "оператор **" ;
	EN.localizedName = "operator **" ;
	TEMPLATING_ID = 6 ;
]

class `operator_**=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "**=" ;
	RU.localizedName = "оператор **=" ;
	EN.localizedName = "operator **=" ;
	TEMPLATING_ID = 22 ;
]

class `operator_*=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "*=" ;
	RU.localizedName = "оператор *=" ;
	EN.localizedName = "operator *=" ;
	TEMPLATING_ID = 16 ;
]

class `operator_+` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 7 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "+" ;
	RU.localizedName = "оператор +" ;
	EN.localizedName = "operator +" ;
	TEMPLATING_ID = 7 ;
]

class `operator_+=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "+=" ;
	RU.localizedName = "оператор +=" ;
	EN.localizedName = "operator +=" ;
	TEMPLATING_ID = 14 ;
]

class `operator_-` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 7 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "-" ;
	RU.localizedName = "оператор -" ;
	EN.localizedName = "operator -" ;
	TEMPLATING_ID = 8 ;
]

class `operator_-=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "-=" ;
	RU.localizedName = "оператор -=" ;
	EN.localizedName = "operator -=" ;
	TEMPLATING_ID = 15 ;
]

class `operator_.` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "." ;
	RU.localizedName = "оператор ." ;
	EN.localizedName = "operator ." ;
	TEMPLATING_ID = 9 ;
]

class `operator_/` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 6 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "/" ;
	RU.localizedName = "оператор /" ;
	EN.localizedName = "operator /" ;
	TEMPLATING_ID = 10 ;
]

class `operator_//` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 6 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "//" ;
	RU.localizedName = "оператор //" ;
	EN.localizedName = "operator //" ;
	TEMPLATING_ID = 11 ;
]

class `operator_//=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "//=" ;
	RU.localizedName = "оператор //=" ;
	EN.localizedName = "operator //=" ;
	TEMPLATING_ID = 18 ;
]

class `operator_/=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "/=" ;
	RU.localizedName = "оператор /=" ;
	EN.localizedName = "operator /=" ;
	TEMPLATING_ID = 17 ;
]

class `operator_:=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ":=" ;
	RU.localizedName = "оператор :=" ;
	EN.localizedName = "operator :=" ;
	TEMPLATING_ID = 12 ;
]

class `operator_<` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<" ;
	RU.localizedName = "оператор <" ;
	EN.localizedName = "operator <" ;
	TEMPLATING_ID = 27 ;
]

class `operator_<<` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 8 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<<" ;
	RU.localizedName = "оператор <<" ;
	EN.localizedName = "operator <<" ;
	TEMPLATING_ID = 28 ;
]

class `operator_<<=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<<=" ;
	RU.localizedName = "оператор <<=" ;
	EN.localizedName = "operator <<=" ;
	TEMPLATING_ID = 19 ;
]

class `operator_<=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "<=" ;
	RU.localizedName = "оператор <=" ;
	EN.localizedName = "operator <=" ;
	TEMPLATING_ID = 29 ;
]

class `operator_=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "=" ;
	RU.localizedName = "оператор =" ;
	EN.localizedName = "operator =" ;
	TEMPLATING_ID = 13 ;
]

class `operator_==` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "==" ;
	RU.localizedName = "оператор ==" ;
	EN.localizedName = "operator ==" ;
	TEMPLATING_ID = 30 ;
]

class `operator_>` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">" ;
	RU.localizedName = "оператор >" ;
	EN.localizedName = "operator >" ;
	TEMPLATING_ID = 33 ;
]

class `operator_>=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">=" ;
	RU.localizedName = "оператор >=" ;
	EN.localizedName = "operator >=" ;
	TEMPLATING_ID = 31 ;
]

class `operator_>>` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 8 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">>" ;
	RU.localizedName = "оператор >>" ;
	EN.localizedName = "operator >>" ;
	TEMPLATING_ID = 32 ;
]

class `operator_>>=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = ">>=" ;
	RU.localizedName = "оператор >>=" ;
	EN.localizedName = "operator >>=" ;
	TEMPLATING_ID = 20 ;
]

class `operator_@` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 6 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "@" ;
	RU.localizedName = "оператор @" ;
	EN.localizedName = "operator @" ;
	TEMPLATING_ID = 35 ;
]

class `operator_@=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "@=" ;
	RU.localizedName = "оператор @=" ;
	EN.localizedName = "operator @=" ;
	TEMPLATING_ID = 26 ;
]

class `operator_^` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 10 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "^" ;
	RU.localizedName = "оператор ^" ;
	EN.localizedName = "operator ^" ;
	TEMPLATING_ID = 36 ;
]

class `operator_^=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "^=" ;
	RU.localizedName = "оператор ^=" ;
	EN.localizedName = "operator ^=" ;
	TEMPLATING_ID = 23 ;
]

class operator_await : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 3 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "await" ;
	RU.localizedName = "оператор await" ;
	EN.localizedName = "operator await" ;
	TEMPLATING_ID = 38 ;
]

class operator_call : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = false ;
	needsOperand<OperandPlacement:center> = true ;
	countOfTokens = 2 ;
	canHaveManyCentralOperands = true ;
} [
	text = "(" ;
	token2text = ")" ;
	RU.localizedName = "оператор вызова" ;
	EN.localizedName = "call operator" ;
	isComplex = true ;
	TEMPLATING_ID = 47 ;
]

class operator_in : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "in" ;
	RU.localizedName = "оператор in" ;
	EN.localizedName = "operator in" ;
	TEMPLATING_ID = 40 ;
]

class operator_is : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "is" ;
	RU.localizedName = "оператор is" ;
	EN.localizedName = "operator is" ;
	TEMPLATING_ID = 42 ;
]

class operator_is_not : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "is not" ;
	RU.localizedName = "оператор is not" ;
	EN.localizedName = "operator is not" ;
	TEMPLATING_ID = 43 ;
]

class operator_lambda : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 17 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "lambda" ;
	RU.localizedName = "оператор lambda" ;
	EN.localizedName = "operator lambda" ;
	isComplex = true ;
	TEMPLATING_ID = 44 ;
]

class operator_list : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = false ;
	needsOperand<OperandPlacement:center> = true ;
	canHaveManyCentralOperands = true ;
	countOfTokens = 2 ;
} [
	text = "[" ;
	token2text = "]" ;
	isComplex = true ;
	RU.localizedName = "литерал коллекции" ;
	EN.localizedName = "collection operator" ;
	TEMPLATING_ID = 5 ;
]

class operator_not : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 13 ;
	associativity = associativity:right ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "not" ;
	RU.localizedName = "оператор not" ;
	EN.localizedName = "operator not" ;
	TEMPLATING_ID = 34 ;
]

class operator_not_in : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 12 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "not in" ;
	RU.localizedName = "оператор not in" ;
	EN.localizedName = "operator not in" ;
	TEMPLATING_ID = 41 ;
]

class operator_subscript : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 2 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = false ;
	needsOperand<OperandPlacement:center> = true ;
	countOfTokens = 2 ;
} [
	text = "[" ;
	token2text = "]" ;
	RU.localizedName = "оператор [ ]" ;
	EN.localizedName = "operator [ ]" ;
	isComplex = true ;
	TEMPLATING_ID = 46 ;
]

class `operator_unary_+` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 5 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "+" ;
	RU.localizedName = "оператор +" ;
	EN.localizedName = "operator +" ;
	TEMPLATING_ID = 48 ;
]

class `operator_unary_-` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 5 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "-" ;
	RU.localizedName = "оператор -" ;
	EN.localizedName = "operator -" ;
	TEMPLATING_ID = 49 ;
]

class `operator_|` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 11 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "|" ;
	RU.localizedName = "оператор |" ;
	EN.localizedName = "operator |" ;
	TEMPLATING_ID = 50 ;
]

class `operator_|=` : operator {

	arity = arity:binary ;
	place = place:infix ;
	precedence = 18 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = true ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "|=" ;
	RU.localizedName = "оператор |=" ;
	EN.localizedName = "operator |=" ;
	TEMPLATING_ID = 25 ;
]

class `operator_~` : operator {

	arity = arity:unary ;
	place = place:prefix ;
	precedence = 5 ;
	associativity = associativity:left ;
	needsOperand<OperandPlacement:left> = false ;
	needsOperand<OperandPlacement:right> = true ;
	needsOperand<OperandPlacement:center> = false ;
	countOfTokens = 1 ;
} [
	text = "~" ;
	RU.localizedName = "оператор ~" ;
	EN.localizedName = "operator ~" ;
	TEMPLATING_ID = 51 ;
]

//-----------------------OBJECT SECTION-----------------------
//------------------------------------------------------------

obj currentLanguage : language {
	isStrictOrderCentralOperands = true ;

} [
	RU.localizedName = "язык Python" ;
	EN.localizedName = "Python language" ;
	TEMPLATING_ID = 52 ;
]

