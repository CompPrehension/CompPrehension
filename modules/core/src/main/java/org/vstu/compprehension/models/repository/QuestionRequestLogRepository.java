package org.vstu.compprehension.models.repository;

import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.transaction.annotation.Transactional;
import org.vstu.compprehension.models.businesslogic.QuestionRequest;
import org.vstu.compprehension.models.entities.QuestionRequestLogEntity;

public interface QuestionRequestLogRepository extends CrudRepository<QuestionRequestLogEntity, Long> {

    @Modifying(clearAutomatically = true)
    @Transactional
    @Query(value = "insert into question_request_log (exercise_attempt_id,domain_shortname,target_concept_names,target_concept_names_in_plan,denied_concept_names,allowed_concept_names,target_law_names,target_law_names_in_plan,denied_law_names,allowed_law_names,denied_question_names,denied_question_template_ids,denied_question_meta_ids,solving_duration,complexity,complexity_search_direction,laws_search_direction,chance_to_pick_autogenerated_question," +
            "found_count, created_date) " +
            ""
            + "VALUES (:#{#qr.exerciseAttemptId}, :#{#qr.domainShortname}, :#{#qr.targetConceptNames},  :#{#qr.targetConceptNamesInPlan}, :#{#qr.deniedConceptNames}, :#{#qr.allowedConceptNames}, :#{#qr.targetLawNames}, :#{#qr.targetLawNamesInPlan}, :#{#qr.deniedLawNames}, :#{#qr.allowedLawNames}, :#{#qr.deniedQuestionNames}, :#{#qr.deniedQuestionTemplateIds}, :#{#qr.deniedQuestionMetaIds}, :#{#qr.solvingDuration}, :#{#qr.complexity}, :#{#qr.complexitySearchDirection}, :#{#qr.lawsSearchDirection}, :#{#qr.chanceToPickAutogeneratedQuestion," +

            "1" +  // << todo: add here basic domain's count query

            ",now()" +
            "} )", nativeQuery = true)
    public void logQuestionRequestAndCountQuestions(@Param("qr") QuestionRequestLogEntity qr);
}














