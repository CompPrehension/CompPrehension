<?xml version="1.0"?><StartNode><InputVariables><DecisionTreeVarDecl name="usageLine" type="Line"/><DecisionTreeVarDecl name="var" type="DeclarationLine"/><DecisionTreeVarDecl name="prefix" type="Prefix"/></InputVariables><ThoughtBranch _alias="startThought" type="bool"><FindActionNode _id="0" _alias="Find Declaration у var&#10;varDecl"><Expression><GetByRelationship varName=""><DecisionTreeVar name="var"/><Relationship name="belongsTo"/></GetByRelationship></Expression><DecisionTreeVarDecl name="varDecl" type="Context"/><Outcome value="Found"><FindActionNode _id="1" _alias="Find контекст usageLine&#10;usageCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="usageLine"/><Relationship name="belongsTo"/></GetByRelationship></Expression><DecisionTreeVarDecl name="usageCt" type="Context"/><Outcome value="Found"><QuestionNode _id="2" _alias="Есть ли у префикса именованный контекст?" type="bool" isSwitch="false"><Expression><GetPropertyValue><DecisionTreeVar name="prefix"/><Property name="hasNamedContext"/></GetPropertyValue></Expression><Outcome value="False"><QuestionNode _id="3" _alias="Является ли contextRelation между usageCt и varDecl внутренним или дочерним?" type="bool" isSwitch="false"><Expression><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="varDecl"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="varDecl"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></Expression><Outcome value="True"><FindActionNode _id="4" _alias="parentCt становится varDecl&#10;parentCt"><Expression><DecisionTreeVar name="varDecl"/></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="5" _alias="Находится ли usageCt раньше varDecl и не является контекстное отношение usageCt внутренним или дочерним для parentCt?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="6" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="7" _skill="переменная находится после места использования и это класс" _alias="Находится ли usageCt раньше varDecl и не позволяет тип контекста parentCt просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="8" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration and the parent scope type does not allow viewing after, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="9" _alias="Является ли usageCt статичным или ∃ Контекст, который содержит usageCt и содержится в parentCt и является статичным и varDecl не является статичным?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalOr><GetPropertyValue><DecisionTreeVar name="usageCt"/><Property name="isStatic"/></GetPropertyValue><ExistenceQuantifier type="Context" varName="tmpStaticContext"><CheckClass><Variable name="tmpStaticContext"/><Class name="Context"/></CheckClass><LogicalAnd><LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="tmpStaticContext"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="ancestor"/><Variable name="tmpStaticContext"/><DecisionTreeVar name="parentCt"/></CheckRelationship></LogicalAnd><GetPropertyValue><Variable name="tmpStaticContext"/><Property name="isStatic"/></GetPropertyValue></LogicalAnd></ExistenceQuantifier></LogicalOr><LogicalNot><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="isStatic"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="10" _skill="модификатор доступа у переменной" _alias="Может ли видимый модификатор varDecl быть видимым с контекстным отношением usageCt и parentCt в типе контекста parentCt?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="11" _alias="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}." _RU_explanation="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}."
_EN_explanation="You cannot view the {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; from the {parentCt-&gt;contextType.nameEn} &quot;{parentCt.name}&quot; in line {usageLine.number}, because it is {varDecl-&gt;visiblyModifier.errorTextEn}." value="error"/></Outcome><Outcome value="True"><QuestionNode _id="12" _alias="Является ли префикс GlobalPrefix?" type="bool" isSwitch="false"><Expression><CheckClass><DecisionTreeVar name="prefix"/><Class name="GlobalPrefix"/></CheckClass></Expression><Outcome value="False"><CycleAggregationNode _id="13" _skill="перекрытие переменной" _alias="∀ контекстов, для которых контекстное отношение parentCt является Internal с именем varDecl &#10;AND&#10;X" operator="AND"><SelectorExpression><LogicalOr><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="X"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="X"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><ExistenceQuantifier type="Context" varName="Z"><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="Z"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="Z"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="Z"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="NOT_EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="Z"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><Variable name="X"/></CheckRelationship></LogicalAnd></ExistenceQuantifier></LogicalOr></SelectorExpression><DecisionTreeVarDecl name="X" type="Context"/><Outcome value="Correct"><BranchResultNode _id="14" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:" _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:"
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} and has no overlap because:" value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="Null"><BranchResultNode _id="15" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать." _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать."
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} because it is in the scope of the {var-&gt;belongsTo.typeNameEn} and there are no other variables before the line that can overlap." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><ThoughtBranch _alias="Тело" type="bool" paramName="X"><QuestionNode _id="16" _alias="Есть ли у префикса именованный контекст и не является X DataStructure?" type="bool" isSwitch="false"><Expression><LogicalAnd><GetPropertyValue><DecisionTreeVar name="prefix"/><Property name="hasNamedContext"/></GetPropertyValue><LogicalNot><CheckClass><DecisionTreeVar name="X"/><Class name="DataStructure"/></CheckClass></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="17" _alias="Находится ли usageCt перед X и тип контекста X родителя не позволяет просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="has"/></GetByRelationship></CheckRelationship></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="18" _alias="Может ли видимый модификатор otherVarDecl быть видимым с контекстным отношением usageCt и родителем otherVarDecl в типе контекста родителя otherVarDecl?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="19" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} has an access modifier that is not visible in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="True"><BranchResultNode _id="20" _alias="Выбранный ответ не верен, так как в строке {X-&gt;has.number}&amp;nbsp;{X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его." _RU_explanation="Выбранный ответ не верен, так как в строке {X-&gt;has.number} {X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его."
_EN_explanation="The selected answer is not correct, because in line {X-&gt;has.number} the {X-&gt;contextType.nameEn} named '{X.name}' overlaps it." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="21" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} is after line {usageLine.number}, so it is not {X.visibleTextEn} in it." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="22" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} по префиксу {prefix.name} не {X.visibleText} в строке {usageLine.number}." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} {prefix.name} не {X.visibleText} в строке {usageLine.number}."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} {prefix.nameEn} is not {X.visibleTextEn} in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></ThoughtBranch></CycleAggregationNode></Outcome><Outcome value="True"><FindActionNode _id="23" _alias="Получить родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="24" _skill="переменная является глобальной" _alias="Является ли тип контекста parentCt глобальным?" type="bool" isSwitch="false"><Expression><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Object name="global"/></Compare></Expression><Outcome value="False"><QuestionNode _id="25" _skill="переменная является глобальной" _alias="Является ли contextType parentCt прозрачным и тип контекста родителя parentCt является глобальным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="False"><BranchResultNode _id="26" _alias="{currentCt-&gt;contextType-&gt;nameI} с именем '{currentCt-&gt;name}' на строке {currentCt-&gt;numOfStrInCode} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости." _RU_explanation="{varDecl-&gt;contextType-&gt;nameI} с именем '{varDecl-&gt;name}' на строке {varDecl->has.number} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости."
_EN_explanation="The {varDecl-&gt;contextType-&gt;nameEn} named '{varDecl-&gt;name}' on line {varDecl->has.number} is not visible from the global scope. A path starting with '::' means that the initial element of the path must be visible from the global scope." value="error"/></Outcome><Outcome value="True"><BranchResultNode _id="27" _alias="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области." _RU_explanation="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области."
_EN_explanation="The enumeration element named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because the enumeration is in the global area and only the enumeration element in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="28" _alias="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области." _RU_explanation="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области."
_EN_explanation="The variable named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because it is in the global area and only the object in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="29" _alias="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ." _RU_explanation="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ."
_EN_explanation="You cannot be visible inside the static scope in line {usageLine.number} to a non-static {varDecl-&gt;contextType.nameEn} named '{varDecl.name}' located outside its scope." value="error"/></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome><Outcome value="False"><QuestionNode _id="30" _alias="Является ли contextRelation между родителем varDecl и usageCT внутренним или дочерним?" type="bool" isSwitch="false"><Expression><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></Expression><Outcome value="False"><QuestionNode _id="31" _skill="определение общей области видимости" _alias="Является ли родитель varDecl прозрачным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="True"><FindActionNode _id="32" _alias="Получить родителя родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="33" _skill="определение общей области видимости" _alias="Является ли contextRelation между usageCT и parentCt внутренним или дочерним?" type="bool" isSwitch="false"><Expression><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></Expression><Outcome value="True"><QuestionNode _id="34" _alias="Находится ли usageCt раньше varDecl и не является контекстное отношение usageCt внутренним или дочерним для parentCt?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="35" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="36" _skill="переменная находится после места использования и это класс" _alias="Находится ли usageCt раньше varDecl и не позволяет тип контекста parentCt просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="37" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration and the parent scope type does not allow viewing after, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="38" _alias="Является ли usageCt статичным или ∃ Контекст, который содержит usageCt и содержится в parentCt и является статичным и varDecl не является статичным?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalOr><GetPropertyValue><DecisionTreeVar name="usageCt"/><Property name="isStatic"/></GetPropertyValue><ExistenceQuantifier type="Context" varName="tmpStaticContext"><CheckClass><Variable name="tmpStaticContext"/><Class name="Context"/></CheckClass><LogicalAnd><LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="tmpStaticContext"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="ancestor"/><Variable name="tmpStaticContext"/><DecisionTreeVar name="parentCt"/></CheckRelationship></LogicalAnd><GetPropertyValue><Variable name="tmpStaticContext"/><Property name="isStatic"/></GetPropertyValue></LogicalAnd></ExistenceQuantifier></LogicalOr><LogicalNot><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="isStatic"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="39" _skill="модификатор доступа у переменной" _alias="Может ли видимый модификатор varDecl быть видимым с контекстным отношением usageCt и parentCt в типе контекста parentCt?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="40" _alias="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}." _RU_explanation="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}."
_EN_explanation="You cannot view the {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; from the {parentCt-&gt;contextType.nameEn} &quot;{parentCt.name}&quot; in line {usageLine.number}, because it is {varDecl-&gt;visiblyModifier.errorTextEn}." value="error"/></Outcome><Outcome value="True"><QuestionNode _id="41" _alias="Является ли префикс GlobalPrefix?" type="bool" isSwitch="false"><Expression><CheckClass><DecisionTreeVar name="prefix"/><Class name="GlobalPrefix"/></CheckClass></Expression><Outcome value="False"><CycleAggregationNode _id="42" _skill="перекрытие переменной" _alias="∀ контекстов, для которых контекстное отношение parentCt является Internal с именем varDecl &#10;AND&#10;X" operator="AND"><SelectorExpression><LogicalOr><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="X"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="X"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><ExistenceQuantifier type="Context" varName="Z"><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="Z"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="Z"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="Z"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="NOT_EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="Z"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><Variable name="X"/></CheckRelationship></LogicalAnd></ExistenceQuantifier></LogicalOr></SelectorExpression><DecisionTreeVarDecl name="X" type="Context"/><Outcome value="Correct"><BranchResultNode _id="43" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:" _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:"
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} and has no overlap because:" value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="Null"><BranchResultNode _id="44" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать." _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать."
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} because it is in the scope of the {var-&gt;belongsTo.typeNameEn} and there are no other variables before the line that can overlap." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><ThoughtBranch _alias="Тело" type="bool" paramName="X"><QuestionNode _id="45" _alias="Есть ли у префикса именованный контекст и не является X DataStructure?" type="bool" isSwitch="false"><Expression><LogicalAnd><GetPropertyValue><DecisionTreeVar name="prefix"/><Property name="hasNamedContext"/></GetPropertyValue><LogicalNot><CheckClass><DecisionTreeVar name="X"/><Class name="DataStructure"/></CheckClass></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="46" _alias="Находится ли usageCt перед X и тип контекста X родителя не позволяет просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="has"/></GetByRelationship></CheckRelationship></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="47" _alias="Может ли видимый модификатор otherVarDecl быть видимым с контекстным отношением usageCt и родителем otherVarDecl в типе контекста родителя otherVarDecl?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="48" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} has an access modifier that is not visible in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="True"><BranchResultNode _id="49" _alias="Выбранный ответ не верен, так как в строке {X-&gt;has.number}&amp;nbsp;{X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его." _RU_explanation="Выбранный ответ не верен, так как в строке {X-&gt;has.number} {X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его."
_EN_explanation="The selected answer is not correct, because in line {X-&gt;has.number} the {X-&gt;contextType.nameEn} named '{X.name}' overlaps it." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="50" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} is after line {usageLine.number}, so it is not {X.visibleTextEn} in it." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="51" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} по префиксу {prefix.name} не {X.visibleText} в строке {usageLine.number}." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} {prefix.name} не {X.visibleText} в строке {usageLine.number}."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} {prefix.nameEn} is not {X.visibleTextEn} in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></ThoughtBranch></CycleAggregationNode></Outcome><Outcome value="True"><FindActionNode _id="52" _alias="Получить родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="53" _skill="переменная является глобальной" _alias="Является ли тип контекста parentCt глобальным?" type="bool" isSwitch="false"><Expression><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Object name="global"/></Compare></Expression><Outcome value="False"><QuestionNode _id="54" _skill="переменная является глобальной" _alias="Является ли contextType parentCt прозрачным и тип контекста родителя parentCt является глобальным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="False"><BranchResultNode _id="55" _alias="{currentCt-&gt;contextType-&gt;nameI} с именем '{currentCt-&gt;name}' на строке {currentCt-&gt;numOfStrInCode} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости." _RU_explanation="{varDecl-&gt;contextType-&gt;nameI} с именем '{varDecl-&gt;name}' на строке {varDecl->has.number} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости."
_EN_explanation="The {varDecl-&gt;contextType-&gt;nameEn} named '{varDecl-&gt;name}' on line {varDecl->has.number} is not visible from the global scope. A path starting with '::' means that the initial element of the path must be visible from the global scope." value="error"/></Outcome><Outcome value="True"><BranchResultNode _id="56" _alias="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области." _RU_explanation="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области."
_EN_explanation="The enumeration element named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because the enumeration is in the global area and only the enumeration element in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="57" _alias="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области." _RU_explanation="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области."
_EN_explanation="The variable named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because it is in the global area and only the object in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="58" _alias="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ." _RU_explanation="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ."
_EN_explanation="You cannot be visible inside the static scope in line {usageLine.number} to a non-static {varDecl-&gt;contextType.nameEn} named '{varDecl.name}' located outside its scope." value="error"/></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="False"><BranchResultNode _id="59" _alias="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной." _RU_explanation="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной."
_EN_explanation="The {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; in line {varDecl-&gt;has.number} is not visible from line {usageLine.number}, because there is no scope that is parent to declaration line {varDecl-&gt;has.number} and is parent to the selected line {usageLine.number} and through which the variable can be accessed." value="error"/></Outcome></QuestionNode></Outcome></FindActionNode></Outcome><Outcome value="False"><BranchResultNode _id="60" _alias="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной." _RU_explanation="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной."
_EN_explanation="The {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; in line {varDecl-&gt;has.number} is not visible from line {usageLine.number}, because there is no scope that is parent to declaration line {varDecl-&gt;has.number} and is parent to the selected line {usageLine.number} and through which the variable can be accessed." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><FindActionNode _id="61" _alias="parentCt становится родитель varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="62" _alias="Находится ли usageCt раньше varDecl и не является контекстное отношение usageCt внутренним или дочерним для parentCt?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="63" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="64" _skill="переменная находится после места использования и это класс" _alias="Находится ли usageCt раньше varDecl и не позволяет тип контекста parentCt просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="65" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration and the parent scope type does not allow viewing after, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="66" _alias="Является ли usageCt статичным или ∃ Контекст, который содержит usageCt и содержится в parentCt и является статичным и varDecl не является статичным?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalOr><GetPropertyValue><DecisionTreeVar name="usageCt"/><Property name="isStatic"/></GetPropertyValue><ExistenceQuantifier type="Context" varName="tmpStaticContext"><CheckClass><Variable name="tmpStaticContext"/><Class name="Context"/></CheckClass><LogicalAnd><LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="tmpStaticContext"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="ancestor"/><Variable name="tmpStaticContext"/><DecisionTreeVar name="parentCt"/></CheckRelationship></LogicalAnd><GetPropertyValue><Variable name="tmpStaticContext"/><Property name="isStatic"/></GetPropertyValue></LogicalAnd></ExistenceQuantifier></LogicalOr><LogicalNot><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="isStatic"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="67" _skill="модификатор доступа у переменной" _alias="Может ли видимый модификатор varDecl быть видимым с контекстным отношением usageCt и parentCt в типе контекста parentCt?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="68" _alias="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}." _RU_explanation="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}."
_EN_explanation="You cannot view the {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; from the {parentCt-&gt;contextType.nameEn} &quot;{parentCt.name}&quot; in line {usageLine.number}, because it is {varDecl-&gt;visiblyModifier.errorTextEn}." value="error"/></Outcome><Outcome value="True"><QuestionNode _id="69" _alias="Является ли префикс GlobalPrefix?" type="bool" isSwitch="false"><Expression><CheckClass><DecisionTreeVar name="prefix"/><Class name="GlobalPrefix"/></CheckClass></Expression><Outcome value="False"><CycleAggregationNode _id="70" _skill="перекрытие переменной" _alias="∀ контекстов, для которых контекстное отношение parentCt является Internal с именем varDecl &#10;AND&#10;X" operator="AND"><SelectorExpression><LogicalOr><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="X"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="X"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><ExistenceQuantifier type="Context" varName="Z"><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="Z"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="Z"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="Z"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="NOT_EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="Z"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><Variable name="X"/></CheckRelationship></LogicalAnd></ExistenceQuantifier></LogicalOr></SelectorExpression><DecisionTreeVarDecl name="X" type="Context"/><Outcome value="Correct"><BranchResultNode _id="71" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:" _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:"
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} and has no overlap because:" value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="Null"><BranchResultNode _id="72" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать." _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать."
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} because it is in the scope of the {var-&gt;belongsTo.typeNameEn} and there are no other variables before the line that can overlap." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><ThoughtBranch _alias="Тело" type="bool" paramName="X"><QuestionNode _id="73" _alias="Есть ли у префикса именованный контекст и не является X DataStructure?" type="bool" isSwitch="false"><Expression><LogicalAnd><GetPropertyValue><DecisionTreeVar name="prefix"/><Property name="hasNamedContext"/></GetPropertyValue><LogicalNot><CheckClass><DecisionTreeVar name="X"/><Class name="DataStructure"/></CheckClass></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="74" _alias="Находится ли usageCt перед X и тип контекста X родителя не позволяет просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="has"/></GetByRelationship></CheckRelationship></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="75" _alias="Может ли видимый модификатор otherVarDecl быть видимым с контекстным отношением usageCt и родителем otherVarDecl в типе контекста родителя otherVarDecl?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="76" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} has an access modifier that is not visible in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="True"><BranchResultNode _id="77" _alias="Выбранный ответ не верен, так как в строке {X-&gt;has.number}&amp;nbsp;{X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его." _RU_explanation="Выбранный ответ не верен, так как в строке {X-&gt;has.number} {X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его."
_EN_explanation="The selected answer is not correct, because in line {X-&gt;has.number} the {X-&gt;contextType.nameEn} named '{X.name}' overlaps it." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="78" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} is after line {usageLine.number}, so it is not {X.visibleTextEn} in it." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="79" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} по префиксу {prefix.name} не {X.visibleText} в строке {usageLine.number}." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} {prefix.name} не {X.visibleText} в строке {usageLine.number}."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} {prefix.nameEn} is not {X.visibleTextEn} in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></ThoughtBranch></CycleAggregationNode></Outcome><Outcome value="True"><FindActionNode _id="80" _alias="Получить родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="81" _skill="переменная является глобальной" _alias="Является ли тип контекста parentCt глобальным?" type="bool" isSwitch="false"><Expression><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Object name="global"/></Compare></Expression><Outcome value="False"><QuestionNode _id="82" _skill="переменная является глобальной" _alias="Является ли contextType parentCt прозрачным и тип контекста родителя parentCt является глобальным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="False"><BranchResultNode _id="83" _alias="{currentCt-&gt;contextType-&gt;nameI} с именем '{currentCt-&gt;name}' на строке {currentCt-&gt;numOfStrInCode} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости." _RU_explanation="{varDecl-&gt;contextType-&gt;nameI} с именем '{varDecl-&gt;name}' на строке {varDecl->has.number} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости."
_EN_explanation="The {varDecl-&gt;contextType-&gt;nameEn} named '{varDecl-&gt;name}' on line {varDecl->has.number} is not visible from the global scope. A path starting with '::' means that the initial element of the path must be visible from the global scope." value="error"/></Outcome><Outcome value="True"><BranchResultNode _id="84" _alias="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области." _RU_explanation="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области."
_EN_explanation="The enumeration element named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because the enumeration is in the global area and only the enumeration element in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="85" _alias="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области." _RU_explanation="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области."
_EN_explanation="The variable named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because it is in the global area and only the object in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="86" _alias="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ." _RU_explanation="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ."
_EN_explanation="You cannot be visible inside the static scope in line {usageLine.number} to a non-static {varDecl-&gt;contextType.nameEn} named '{varDecl.name}' located outside its scope." value="error"/></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="True"><FindActionNode _id="87" _alias="currentToken становится конечным токеном префикса"><Expression><GetByRelationship varName=""><DecisionTreeVar name="prefix"/><Relationship name="end"/></GetByRelationship></Expression><DecisionTreeVarDecl name="currentToken" type="Token"/><Outcome value="Found"><WhileCycleNode _id="88" _alias="Пока у currentToken есть предыдущий токен&#10;seq&#10;currentToken becomes currentToken previous" operator="AND"><SelectorExpression><ExistenceQuantifier type="Token" varName="previousToken"><CheckClass><Variable name="previousToken"/><Class name="Token"/></CheckClass><CheckRelationship><Relationship name="previousToken"/><DecisionTreeVar name="currentToken"/><Variable name="previousToken"/></CheckRelationship></ExistenceQuantifier></SelectorExpression><DecisionTreeVarDecl name="whileTmp" type="Token"/><ThoughtBranch _alias="Body" type="bool" paramName="whileTmp"><FindActionNode _id="89" _alias="Получить родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="90" _alias="Находится ли usageCt раньше varDecl и не является контекстное отношение usageCt внутренним или дочерним для parentCt?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="91" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"><Expression><AssignToDecisionTreeVar><DecisionTreeVar name="currentToken"/><Object name="startMarker"/></AssignToDecisionTreeVar></Expression></BranchResultNode></Outcome><Outcome value="False"><QuestionNode _id="92" _skill="переменная находится после места использования и это класс" _alias="Находится ли usageCt раньше varDecl и не позволяет тип контекста parentCt просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="93" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration and the parent scope type does not allow viewing after, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"><Expression><AssignToDecisionTreeVar><DecisionTreeVar name="currentToken"/><Object name="startMarker"/></AssignToDecisionTreeVar></Expression></BranchResultNode></Outcome><Outcome value="False"><QuestionNode _id="94" _skill="переменная является статической" _alias="∃ может ли он жить от usageCt до parentCt с жизненным циклом varDecl?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeLive"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="lifecycle"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="95" _alias="{varDecl.typeNameForStaticError} в выбранной строке через оператор &quot;::&quot; из класса с именем &quot;{parentCt.name}&quot;." _RU_explanation="{varDecl.typeNameForStaticError} в выбранной строке через оператор &quot;::&quot; из класса с именем &quot;{parentCt.name}&quot;."
_EN_explanation="{varDecl.typeNameForStaticErrorEn} in a selected line by using the &quot;::&quot; operator from a class named &quot;{parentCt.name}&quot;." value="error"><Expression><AssignToDecisionTreeVar><DecisionTreeVar name="currentToken"/><Object name="startMarker"/></AssignToDecisionTreeVar></Expression></BranchResultNode></Outcome><Outcome value="True"><QuestionNode _id="96" _alias="Является ли usageCt статичным или ∃ Контекст, который содержит usageCt и содержится в parentCt и является статичным?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalOr><GetPropertyValue><DecisionTreeVar name="usageCt"/><Property name="isStatic"/></GetPropertyValue><ExistenceQuantifier type="Context" varName="tmpStaticContext"><CheckClass><Variable name="tmpStaticContext"/><Class name="Context"/></CheckClass><LogicalAnd><LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="tmpStaticContext"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="ancestor"/><Variable name="tmpStaticContext"/><DecisionTreeVar name="parentCt"/></CheckRelationship></LogicalAnd><GetPropertyValue><Variable name="tmpStaticContext"/><Property name="isStatic"/></GetPropertyValue></LogicalAnd></ExistenceQuantifier></LogicalOr><LogicalNot><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="isStatic"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="97" _alias="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ." _RU_explanation="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ."
_EN_explanation="You cannot be visible inside the static scope in line {usageLine.number} to a non-static {varDecl-&gt;contextType.nameEn} named '{varDecl.name}' located outside its scope." value="error"><Expression><AssignToDecisionTreeVar><DecisionTreeVar name="currentToken"/><Object name="startMarker"/></AssignToDecisionTreeVar></Expression></BranchResultNode></Outcome><Outcome value="False"><QuestionNode _id="98" _skill="модификатор доступа у переменной" _alias="Может ли видимый модификатор varDecl быть видимым с контекстным отношением usageCt и parentCt в типе контекста parentCt?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="99" _alias="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}." _RU_explanation="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}."
_EN_explanation="You cannot view the {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; from the {parentCt-&gt;contextType.nameEn} &quot;{parentCt.name}&quot; in line {usageLine.number}, because it is {varDecl-&gt;visiblyModifier.errorTextEn}." value="error"><Expression><AssignToDecisionTreeVar><DecisionTreeVar name="currentToken"/><Object name="startMarker"/></AssignToDecisionTreeVar></Expression></BranchResultNode></Outcome><Outcome value="True"><QuestionNode _id="100" _alias="Имя parentCt совпадает с именем currentToken или contextType для parentCt не является прозрачным?" type="bool" isSwitch="false"><Expression><LogicalOr><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="parentCt"/><Property name="name"/></GetPropertyValue><GetPropertyValue><DecisionTreeVar name="currentToken"/><Property name="name"/></GetPropertyValue></Compare><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></LogicalNot></LogicalOr></Expression><Outcome value="True"><BranchResultNode _id="101" _alias="var:currentToken = var:currentToken-&gt;previousToken;&#10;var:varDecl = var:parentCt;" _RU_explanation="var:currentToken = var:currentToken-&gt;previousToken;&#10;var:varDecl = var:parentCt;" value="null"><Expression><Block><AssignToDecisionTreeVar><DecisionTreeVar name="currentToken"/><GetByRelationship varName=""><DecisionTreeVar name="currentToken"/><Relationship name="previousToken"/></GetByRelationship></AssignToDecisionTreeVar><AssignToDecisionTreeVar><DecisionTreeVar name="varDecl"/><DecisionTreeVar name="parentCt"/></AssignToDecisionTreeVar></Block></Expression></BranchResultNode></Outcome><Outcome value="False"><BranchResultNode _id="102" _alias="varDecl becomes parentCt" _RU_explanation="varDecl becomes parentCt" value="null"><Expression><AssignToDecisionTreeVar><DecisionTreeVar name="varDecl"/><DecisionTreeVar name="parentCt"/></AssignToDecisionTreeVar></Expression></BranchResultNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></FindActionNode></ThoughtBranch><Outcome value="Null"><QuestionNode _id="103" _alias="Является ли contextRelation между usageCt и varDecl внутренним или дочерним?" type="bool" isSwitch="false"><Expression><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="varDecl"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="varDecl"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></Expression><Outcome value="True"><FindActionNode _id="104" _alias="parentCt становится varDecl&#10;parentCt"><Expression><DecisionTreeVar name="varDecl"/></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="105" _alias="Находится ли usageCt раньше varDecl и не является контекстное отношение usageCt внутренним или дочерним для parentCt?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="106" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="107" _skill="переменная находится после места использования и это класс" _alias="Находится ли usageCt раньше varDecl и не позволяет тип контекста parentCt просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="108" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration and the parent scope type does not allow viewing after, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="109" _alias="Является ли usageCt статичным или ∃ Контекст, который содержит usageCt и содержится в parentCt и является статичным и varDecl не является статичным?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalOr><GetPropertyValue><DecisionTreeVar name="usageCt"/><Property name="isStatic"/></GetPropertyValue><ExistenceQuantifier type="Context" varName="tmpStaticContext"><CheckClass><Variable name="tmpStaticContext"/><Class name="Context"/></CheckClass><LogicalAnd><LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="tmpStaticContext"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="ancestor"/><Variable name="tmpStaticContext"/><DecisionTreeVar name="parentCt"/></CheckRelationship></LogicalAnd><GetPropertyValue><Variable name="tmpStaticContext"/><Property name="isStatic"/></GetPropertyValue></LogicalAnd></ExistenceQuantifier></LogicalOr><LogicalNot><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="isStatic"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="110" _skill="модификатор доступа у переменной" _alias="Может ли видимый модификатор varDecl быть видимым с контекстным отношением usageCt и parentCt в типе контекста parentCt?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="111" _alias="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}." _RU_explanation="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}."
_EN_explanation="You cannot view the {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; from the {parentCt-&gt;contextType.nameEn} &quot;{parentCt.name}&quot; in line {usageLine.number}, because it is {varDecl-&gt;visiblyModifier.errorTextEn}." value="error"/></Outcome><Outcome value="True"><QuestionNode _id="112" _alias="Является ли префикс GlobalPrefix?" type="bool" isSwitch="false"><Expression><CheckClass><DecisionTreeVar name="prefix"/><Class name="GlobalPrefix"/></CheckClass></Expression><Outcome value="False"><CycleAggregationNode _id="113" _skill="перекрытие переменной" _alias="∀ контекстов, для которых контекстное отношение parentCt является Internal с именем varDecl &#10;AND&#10;X" operator="AND"><SelectorExpression><LogicalOr><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="X"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="X"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><ExistenceQuantifier type="Context" varName="Z"><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="Z"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="Z"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="Z"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="NOT_EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="Z"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><Variable name="X"/></CheckRelationship></LogicalAnd></ExistenceQuantifier></LogicalOr></SelectorExpression><DecisionTreeVarDecl name="X" type="Context"/><Outcome value="Correct"><BranchResultNode _id="114" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:" _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:"
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} and has no overlap because:" value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="Null"><BranchResultNode _id="115" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать." _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать."
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} because it is in the scope of the {var-&gt;belongsTo.typeNameEn} and there are no other variables before the line that can overlap." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><ThoughtBranch _alias="Тело" type="bool" paramName="X"><QuestionNode _id="116" _alias="Есть ли у префикса именованный контекст и не является X DataStructure?" type="bool" isSwitch="false"><Expression><LogicalAnd><GetPropertyValue><DecisionTreeVar name="prefix"/><Property name="hasNamedContext"/></GetPropertyValue><LogicalNot><CheckClass><DecisionTreeVar name="X"/><Class name="DataStructure"/></CheckClass></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="117" _alias="Находится ли usageCt перед X и тип контекста X родителя не позволяет просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="has"/></GetByRelationship></CheckRelationship></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="118" _alias="Может ли видимый модификатор otherVarDecl быть видимым с контекстным отношением usageCt и родителем otherVarDecl в типе контекста родителя otherVarDecl?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="119" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} has an access modifier that is not visible in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="True"><BranchResultNode _id="120" _alias="Выбранный ответ не верен, так как в строке {X-&gt;has.number}&amp;nbsp;{X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его." _RU_explanation="Выбранный ответ не верен, так как в строке {X-&gt;has.number} {X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его."
_EN_explanation="The selected answer is not correct, because in line {X-&gt;has.number} the {X-&gt;contextType.nameEn} named '{X.name}' overlaps it." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="121" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} is after line {usageLine.number}, so it is not {X.visibleTextEn} in it." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="122" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} по префиксу {prefix.name} не {X.visibleText} в строке {usageLine.number}." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} {prefix.name} не {X.visibleText} в строке {usageLine.number}."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} {prefix.nameEn} is not {X.visibleTextEn} in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></ThoughtBranch></CycleAggregationNode></Outcome><Outcome value="True"><FindActionNode _id="123" _alias="Получить родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="124" _skill="переменная является глобальной" _alias="Является ли тип контекста parentCt глобальным?" type="bool" isSwitch="false"><Expression><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Object name="global"/></Compare></Expression><Outcome value="False"><QuestionNode _id="125" _skill="переменная является глобальной" _alias="Является ли contextType parentCt прозрачным и тип контекста родителя parentCt является глобальным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="False"><BranchResultNode _id="126" _alias="{currentCt-&gt;contextType-&gt;nameI} с именем '{currentCt-&gt;name}' на строке {currentCt-&gt;numOfStrInCode} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости." _RU_explanation="{varDecl-&gt;contextType-&gt;nameI} с именем '{varDecl-&gt;name}' на строке {varDecl->has.number} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости."
_EN_explanation="The {varDecl-&gt;contextType-&gt;nameEn} named '{varDecl-&gt;name}' on line {varDecl->has.number} is not visible from the global scope. A path starting with '::' means that the initial element of the path must be visible from the global scope." value="error"/></Outcome><Outcome value="True"><BranchResultNode _id="127" _alias="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области." _RU_explanation="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области."
_EN_explanation="The enumeration element named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because the enumeration is in the global area and only the enumeration element in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="128" _alias="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области." _RU_explanation="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области."
_EN_explanation="The variable named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because it is in the global area and only the object in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="129" _alias="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ." _RU_explanation="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ."
_EN_explanation="You cannot be visible inside the static scope in line {usageLine.number} to a non-static {varDecl-&gt;contextType.nameEn} named '{varDecl.name}' located outside its scope." value="error"/></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome><Outcome value="False"><QuestionNode _id="130" _alias="Является ли contextRelation между родителем varDecl и usageCT внутренним или дочерним?" type="bool" isSwitch="false"><Expression><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></Expression><Outcome value="False"><QuestionNode _id="131" _skill="определение общей области видимости" _alias="Является ли родитель varDecl прозрачным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="True"><FindActionNode _id="132" _alias="Получить родителя родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="133" _skill="определение общей области видимости" _alias="Является ли contextRelation между usageCT и parentCt внутренним или дочерним?" type="bool" isSwitch="false"><Expression><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></Expression><Outcome value="True"><QuestionNode _id="134" _alias="Находится ли usageCt раньше varDecl и не является контекстное отношение usageCt внутренним или дочерним для parentCt?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="135" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="136" _skill="переменная находится после места использования и это класс" _alias="Находится ли usageCt раньше varDecl и не позволяет тип контекста parentCt просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="137" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration and the parent scope type does not allow viewing after, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="138" _alias="Является ли usageCt статичным или ∃ Контекст, который содержит usageCt и содержится в parentCt и является статичным и varDecl не является статичным?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalOr><GetPropertyValue><DecisionTreeVar name="usageCt"/><Property name="isStatic"/></GetPropertyValue><ExistenceQuantifier type="Context" varName="tmpStaticContext"><CheckClass><Variable name="tmpStaticContext"/><Class name="Context"/></CheckClass><LogicalAnd><LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="tmpStaticContext"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="ancestor"/><Variable name="tmpStaticContext"/><DecisionTreeVar name="parentCt"/></CheckRelationship></LogicalAnd><GetPropertyValue><Variable name="tmpStaticContext"/><Property name="isStatic"/></GetPropertyValue></LogicalAnd></ExistenceQuantifier></LogicalOr><LogicalNot><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="isStatic"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="139" _skill="модификатор доступа у переменной" _alias="Может ли видимый модификатор varDecl быть видимым с контекстным отношением usageCt и parentCt в типе контекста parentCt?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="140" _alias="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}." _RU_explanation="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}."
_EN_explanation="You cannot view the {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; from the {parentCt-&gt;contextType.nameEn} &quot;{parentCt.name}&quot; in line {usageLine.number}, because it is {varDecl-&gt;visiblyModifier.errorTextEn}." value="error"/></Outcome><Outcome value="True"><QuestionNode _id="141" _alias="Является ли префикс GlobalPrefix?" type="bool" isSwitch="false"><Expression><CheckClass><DecisionTreeVar name="prefix"/><Class name="GlobalPrefix"/></CheckClass></Expression><Outcome value="False"><CycleAggregationNode _id="142" _skill="перекрытие переменной" _alias="∀ контекстов, для которых контекстное отношение parentCt является Internal с именем varDecl &#10;AND&#10;X" operator="AND"><SelectorExpression><LogicalOr><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="X"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="X"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><ExistenceQuantifier type="Context" varName="Z"><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="Z"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="Z"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="Z"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="NOT_EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="Z"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><Variable name="X"/></CheckRelationship></LogicalAnd></ExistenceQuantifier></LogicalOr></SelectorExpression><DecisionTreeVarDecl name="X" type="Context"/><Outcome value="Correct"><BranchResultNode _id="143" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:" _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:"
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} and has no overlap because:" value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="Null"><BranchResultNode _id="144" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать." _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать."
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} because it is in the scope of the {var-&gt;belongsTo.typeNameEn} and there are no other variables before the line that can overlap." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><ThoughtBranch _alias="Тело" type="bool" paramName="X"><QuestionNode _id="145" _alias="Есть ли у префикса именованный контекст и не является X DataStructure?" type="bool" isSwitch="false"><Expression><LogicalAnd><GetPropertyValue><DecisionTreeVar name="prefix"/><Property name="hasNamedContext"/></GetPropertyValue><LogicalNot><CheckClass><DecisionTreeVar name="X"/><Class name="DataStructure"/></CheckClass></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="146" _alias="Находится ли usageCt перед X и тип контекста X родителя не позволяет просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="has"/></GetByRelationship></CheckRelationship></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="147" _alias="Может ли видимый модификатор otherVarDecl быть видимым с контекстным отношением usageCt и родителем otherVarDecl в типе контекста родителя otherVarDecl?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="148" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} has an access modifier that is not visible in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="True"><BranchResultNode _id="149" _alias="Выбранный ответ не верен, так как в строке {X-&gt;has.number}&amp;nbsp;{X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его." _RU_explanation="Выбранный ответ не верен, так как в строке {X-&gt;has.number} {X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его."
_EN_explanation="The selected answer is not correct, because in line {X-&gt;has.number} the {X-&gt;contextType.nameEn} named '{X.name}' overlaps it." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="150" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} is after line {usageLine.number}, so it is not {X.visibleTextEn} in it." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="151" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} по префиксу {prefix.name} не {X.visibleText} в строке {usageLine.number}." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} {prefix.name} не {X.visibleText} в строке {usageLine.number}."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} {prefix.nameEn} is not {X.visibleTextEn} in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></ThoughtBranch></CycleAggregationNode></Outcome><Outcome value="True"><FindActionNode _id="152" _alias="Получить родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="153" _skill="переменная является глобальной" _alias="Является ли тип контекста parentCt глобальным?" type="bool" isSwitch="false"><Expression><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Object name="global"/></Compare></Expression><Outcome value="False"><QuestionNode _id="154" _skill="переменная является глобальной" _alias="Является ли contextType parentCt прозрачным и тип контекста родителя parentCt является глобальным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="False"><BranchResultNode _id="155" _alias="{currentCt-&gt;contextType-&gt;nameI} с именем '{currentCt-&gt;name}' на строке {currentCt-&gt;numOfStrInCode} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости." _RU_explanation="{varDecl-&gt;contextType-&gt;nameI} с именем '{varDecl-&gt;name}' на строке {varDecl->has.number} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости."
_EN_explanation="The {varDecl-&gt;contextType-&gt;nameEn} named '{varDecl-&gt;name}' on line {varDecl->has.number} is not visible from the global scope. A path starting with '::' means that the initial element of the path must be visible from the global scope." value="error"/></Outcome><Outcome value="True"><BranchResultNode _id="156" _alias="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области." _RU_explanation="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области."
_EN_explanation="The enumeration element named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because the enumeration is in the global area and only the enumeration element in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="157" _alias="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области." _RU_explanation="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области."
_EN_explanation="The variable named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because it is in the global area and only the object in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="158" _alias="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ." _RU_explanation="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ."
_EN_explanation="You cannot be visible inside the static scope in line {usageLine.number} to a non-static {varDecl-&gt;contextType.nameEn} named '{varDecl.name}' located outside its scope." value="error"/></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="False"><BranchResultNode _id="159" _alias="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной." _RU_explanation="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной."
_EN_explanation="The {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; in line {varDecl-&gt;has.number} is not visible from line {usageLine.number}, because there is no scope that is parent to declaration line {varDecl-&gt;has.number} and is parent to the selected line {usageLine.number} and through which the variable can be accessed." value="error"/></Outcome></QuestionNode></Outcome></FindActionNode></Outcome><Outcome value="False"><BranchResultNode _id="160" _alias="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной." _RU_explanation="{varDecl.typeNameI} с именем &quot;{varDecl.name}&quot; в строке {varDecl-&gt;has.number} не видна из строки {usageLine.number}, так как нет такой области видимости, которая является родительской для строки объявления {varDecl-&gt;has.number} и является родительской для выбранной строки {usageLine.number} и через которую можно было бы получить доступ к переменной."
_EN_explanation="The {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; in line {varDecl-&gt;has.number} is not visible from line {usageLine.number}, because there is no scope that is parent to declaration line {varDecl-&gt;has.number} and is parent to the selected line {usageLine.number} and through which the variable can be accessed." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><FindActionNode _id="161" _alias="parentCt становится родитель varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="162" _alias="Находится ли usageCt раньше varDecl и не является контекстное отношение usageCt внутренним или дочерним для parentCt?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="163" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR}, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="164" _skill="переменная находится после места использования и это класс" _alias="Находится ли usageCt раньше varDecl и не позволяет тип контекста parentCt просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><LogicalOr><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></CheckRelationship><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="has"/></GetByRelationship></Compare></LogicalOr></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="True"><BranchResultNode _id="165" _alias="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней." _RU_explanation="Строка {usageLine.number} находится до строки {varDecl-&gt;has.number} объявления {varDecl.typeNameR} и тип родительской области видимости не позволяет просматривать после, поэтому {varDecl.typeNameI} не может быть {varDecl.visibleText} в ней."
_EN_explanation="Line {usageLine.number} is before line {varDecl-&gt;has.number} of the {varDecl.typeNameEn} declaration and the parent scope type does not allow viewing after, so the {varDecl.typeNameEn} cannot be {varDecl.visibleTextEn} in it." value="error"/></Outcome><Outcome value="False"><QuestionNode _id="166" _alias="Является ли usageCt статичным или ∃ Контекст, который содержит usageCt и содержится в parentCt и является статичным и varDecl не является статичным?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalOr><GetPropertyValue><DecisionTreeVar name="usageCt"/><Property name="isStatic"/></GetPropertyValue><ExistenceQuantifier type="Context" varName="tmpStaticContext"><CheckClass><Variable name="tmpStaticContext"/><Class name="Context"/></CheckClass><LogicalAnd><LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="tmpStaticContext"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="ancestor"/><Variable name="tmpStaticContext"/><DecisionTreeVar name="parentCt"/></CheckRelationship></LogicalAnd><GetPropertyValue><Variable name="tmpStaticContext"/><Property name="isStatic"/></GetPropertyValue></LogicalAnd></ExistenceQuantifier></LogicalOr><LogicalNot><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="isStatic"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="167" _skill="модификатор доступа у переменной" _alias="Может ли видимый модификатор varDecl быть видимым с контекстным отношением usageCt и parentCt в типе контекста parentCt?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="168" _alias="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}." _RU_explanation="Нельзя увидеть в строке {usageLine.number} {varDecl.typeNameV} с именем &quot;{varDecl.name}&quot; из {parentCt-&gt;contextType.nameR} &quot;{parentCt.name}&quot;, так как оно является {varDecl-&gt;visiblyModifier.errorText}."
_EN_explanation="You cannot view the {varDecl.typeNameEn} named &quot;{varDecl.name}&quot; from the {parentCt-&gt;contextType.nameEn} &quot;{parentCt.name}&quot; in line {usageLine.number}, because it is {varDecl-&gt;visiblyModifier.errorTextEn}." value="error"/></Outcome><Outcome value="True"><QuestionNode _id="169" _alias="Является ли префикс GlobalPrefix?" type="bool" isSwitch="false"><Expression><CheckClass><DecisionTreeVar name="prefix"/><Class name="GlobalPrefix"/></CheckClass></Expression><Outcome value="False"><CycleAggregationNode _id="170" _skill="перекрытие переменной" _alias="∀ контекстов, для которых контекстное отношение parentCt является Internal с именем varDecl &#10;AND&#10;X" operator="AND"><SelectorExpression><LogicalOr><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="X"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="X"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="X"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><ExistenceQuantifier type="Context" varName="Z"><LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="Z"/><Class name="Context"/></CheckClass><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><DecisionTreeVar name="usageCt"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="child"/><DecisionTreeVar name="usageCt"/></CheckRelationship></LogicalOr></LogicalAnd><LogicalOr><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="internal"/><Variable name="Z"/></CheckRelationship><CheckRelationship><Relationship name="contextRelation"/><DecisionTreeVar name="parentCt"/><Object name="child"/><Variable name="Z"/></CheckRelationship></LogicalOr></LogicalAnd><Compare operator="NOT_EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="Z"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><LogicalAnd><LogicalAnd><CheckClass><Variable name="X"/><Class name="Context"/></CheckClass><Compare operator="EQUAL"><GetPropertyValue><DecisionTreeVar name="varDecl"/><Property name="name"/></GetPropertyValue><GetPropertyValue><Variable name="X"/><Property name="name"/></GetPropertyValue></Compare></LogicalAnd><CheckRelationship><Relationship name="contextRelation"/><Variable name="Z"/><Object name="internal"/><Variable name="X"/></CheckRelationship></LogicalAnd></ExistenceQuantifier></LogicalOr></SelectorExpression><DecisionTreeVarDecl name="X" type="Context"/><Outcome value="Correct"><BranchResultNode _id="171" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:" _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number} и не имеет перекрытия, так как:"
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} and has no overlap because:" value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="Null"><BranchResultNode _id="172" _alias="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать." _RU_explanation="{var-&gt;belongsTo.typeNameI} с именем &quot;{var-&gt;belongsTo.name}&quot; {prefix.name} {var-&gt;belongsTo.visibleText} в строке {usageLine.number}, так как находится в области видимости {var-&gt;belongsTo.typeNameR} и перед строкой нет других переменных, которые могут перекрывать."
_EN_explanation="{var-&gt;belongsTo.typeNameEn} named &quot;{var-&gt;belongsTo.name}&quot; {prefix.nameEn} is {var-&gt;belongsTo.visibleTextEn} in line {usageLine.number} because it is in the scope of the {var-&gt;belongsTo.typeNameEn} and there are no other variables before the line that can overlap." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><ThoughtBranch _alias="Тело" type="bool" paramName="X"><QuestionNode _id="173" _alias="Есть ли у префикса именованный контекст и не является X DataStructure?" type="bool" isSwitch="false"><Expression><LogicalAnd><GetPropertyValue><DecisionTreeVar name="prefix"/><Property name="hasNamedContext"/></GetPropertyValue><LogicalNot><CheckClass><DecisionTreeVar name="X"/><Class name="DataStructure"/></CheckClass></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="174" _alias="Находится ли usageCt перед X и тип контекста X родителя не позволяет просматривать после?" type="bool" isSwitch="false"><Expression><LogicalAnd><LogicalNot><CheckRelationship><Relationship name="previousLine"/><GetByRelationship varName=""><DecisionTreeVar name="usageCt"/><Relationship name="has"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="has"/></GetByRelationship></CheckRelationship></LogicalNot><LogicalNot><GetPropertyValue><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><Property name="allowsViewAfter"/></GetPropertyValue></LogicalNot></LogicalAnd></Expression><Outcome value="False"><QuestionNode _id="175" _alias="Может ли видимый модификатор otherVarDecl быть видимым с контекстным отношением usageCt и родителем otherVarDecl в типе контекста родителя otherVarDecl?" type="bool" isSwitch="false"><Expression><CheckRelationship><Relationship name="canBeVisible"/><GetByRelationship varName=""><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Relationship name="contextType"/></GetByRelationship><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="visiblyModifier"/></GetByRelationship><GetByCondition type="ContextRelationType" varName="tmpContextRelation"><CheckRelationship><Relationship name="contextRelation"/><GetByRelationship varName=""><DecisionTreeVar name="X"/><Relationship name="parent"/></GetByRelationship><Variable name="tmpContextRelation"/><DecisionTreeVar name="usageCt"/></CheckRelationship></GetByCondition></CheckRelationship></Expression><Outcome value="False"><BranchResultNode _id="176" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} имеет модификатор доступа, который не виден в {usageLine.number} строке."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} has an access modifier that is not visible in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome><Outcome value="True"><BranchResultNode _id="177" _alias="Выбранный ответ не верен, так как в строке {X-&gt;has.number}&amp;nbsp;{X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его." _RU_explanation="Выбранный ответ не верен, так как в строке {X-&gt;has.number} {X-&gt;contextType.nameLI} с именем '{X.name}' перекрывает его."
_EN_explanation="The selected answer is not correct, because in line {X-&gt;has.number} the {X-&gt;contextType.nameEn} named '{X.name}' overlaps it." value="error"/></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="178" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} находится после строки {usageLine.number}, поэтому не {X.visibleText} в ней."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} is after line {usageLine.number}, so it is not {X.visibleTextEn} in it." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="179" _alias="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} по префиксу {prefix.name} не {X.visibleText} в строке {usageLine.number}." _RU_explanation="{X-&gt;contextType.nameLI} с именем '{X.name}' в строке {X-&gt;has.number} {prefix.name} не {X.visibleText} в строке {usageLine.number}."
_EN_explanation="The {X-&gt;contextType.nameEn} named '{X.name}' in line {X-&gt;has.number} {prefix.nameEn} is not {X.visibleTextEn} in line {usageLine.number}." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></ThoughtBranch></CycleAggregationNode></Outcome><Outcome value="True"><FindActionNode _id="180" _alias="Получить родителя varDecl&#10;parentCt"><Expression><GetByRelationship varName=""><DecisionTreeVar name="varDecl"/><Relationship name="parent"/></GetByRelationship></Expression><DecisionTreeVarDecl name="parentCt" type="Context"/><Outcome value="Found"><QuestionNode _id="181" _skill="переменная является глобальной" _alias="Является ли тип контекста parentCt глобальным?" type="bool" isSwitch="false"><Expression><Compare operator="EQUAL"><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Object name="global"/></Compare></Expression><Outcome value="False"><QuestionNode _id="182" _skill="переменная является глобальной" _alias="Является ли contextType parentCt прозрачным и тип контекста родителя parentCt является глобальным?" type="bool" isSwitch="false"><Expression><GetPropertyValue><GetByRelationship varName=""><DecisionTreeVar name="parentCt"/><Relationship name="contextType"/></GetByRelationship><Property name="transparent"/></GetPropertyValue></Expression><Outcome value="False"><BranchResultNode _id="183" _alias="{currentCt-&gt;contextType-&gt;nameI} с именем '{currentCt-&gt;name}' на строке {currentCt-&gt;numOfStrInCode} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости." _RU_explanation="{varDecl-&gt;contextType-&gt;nameI} с именем '{varDecl-&gt;name}' на строке {varDecl->has.number} не видна из глобальной области видимости. Путь начинающийся с '::' означает, что начальный элемент пути должен быть виден из гобальной области видимости."
_EN_explanation="The {varDecl-&gt;contextType-&gt;nameEn} named '{varDecl-&gt;name}' on line {varDecl->has.number} is not visible from the global scope. A path starting with '::' means that the initial element of the path must be visible from the global scope." value="error"/></Outcome><Outcome value="True"><BranchResultNode _id="184" _alias="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области." _RU_explanation="Элемент перечисления с именем &quot;{var-&gt;belongsTo.name}&quot; виден в строке {usageLine.number}, так как перечисление находится в глобальной области и с помощью глобального префикса можно увидеть только элемент перечисления находящийся в глобальной области."
_EN_explanation="The enumeration element named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because the enumeration is in the global area and only the enumeration element in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="185" _alias="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области." _RU_explanation="Переменная с именем &quot;{var-&gt;belongsTo.name}&quot; видна в строке {usageLine.number}, так как находится в глобальной области и с помощью глобального префикса можно увидеть только объект находящийся в глобальной области."
_EN_explanation="The variable named &quot;{var-&gt;belongsTo.name}&quot; is visible in line {usageLine.number} because it is in the global area and only the object in the global area can be visible using the global prefix." value="correct"><Expression><AssignToProperty><DecisionTreeVar name="usageLine"/><Property name="isEvaluated"/><Boolean value="TRUE"/></AssignToProperty></Expression></BranchResultNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome><Outcome value="True"><BranchResultNode _id="186" _alias="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ." _RU_explanation="Нельзя видеть внутри статической области видимости в строке {usageLine.number} не статический {varDecl-&gt;contextType.nameLI} с именем '{varDecl.name}', располагающиеся вне ее границ."
_EN_explanation="You cannot be visible inside the static scope in line {usageLine.number} to a non-static {varDecl-&gt;contextType.nameEn} named '{varDecl.name}' located outside its scope." value="error"/></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></QuestionNode></Outcome></WhileCycleNode></Outcome></FindActionNode></Outcome></QuestionNode></Outcome></FindActionNode></Outcome></FindActionNode></ThoughtBranch></StartNode>